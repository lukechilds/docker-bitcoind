name: Build Docker Image
on: push
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64v8
          - arm32v7
        version:
          - 0.19.0.1
          - 0.18.1
          - 0.18.0
          - 0.17.2
          - 0.17.1
          - 0.17.0.1
          - 0.17.0
          - 0.16.3
          - 0.15.2
          - 0.14.3
          - 0.13.2
          - 0.13.1
          - 0.13.0
    env:
      DOCKER_IMAGE: bitcoind:v${{ matrix.version }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v1
      - name: Register Docker QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build bitcoind
        run: docker build --build-arg ARCH=${{ matrix.arch }} --build-arg VERSION=${{ matrix.version }} -t $DOCKER_IMAGE .
      - name: Log image data
        run: docker images bitcoind
      - name: Log OS details
        run: docker run --entrypoint sh $DOCKER_IMAGE '-c' 'uname -a && . /etc/os-release && echo $PRETTY_NAME'
      - name: Check bitcoind -version
        run: (docker run $DOCKER_IMAGE -version | tee /dev/stderr | grep -q ${{ matrix.version }}) 2>&1
      - name: Save built image into a .tgz file
        run: mkdir -p images && docker save $DOCKER_IMAGE | gzip > "images/${DOCKER_IMAGE}.tgz"
      - name: Print sha256sum of built image
        run: sha256sum images/*
      - name: Upload built image
        uses: actions/upload-artifact@v1.0.0
        with:
          name: images
          path: images/
  push:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - name: Download all images
        uses: actions/download-artifact@v1.0.0
        with:
          name: images
      - name: Print sha256sum of all images
        run: sha256sum images/*
