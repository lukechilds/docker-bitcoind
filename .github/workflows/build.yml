name: Build Docker Image
on: push
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64v8
          # - arm32v7
        version:
          - 0.19.0.1
          - 0.18.1
          # - 0.18.0
          # - 0.17.2
          # - 0.17.1
          # - 0.17.0.1
          # - 0.17.0
          # - 0.16.3
          # - 0.15.2
          # - 0.14.3
          # - 0.13.2
          # - 0.13.1
          # - 0.13.0
    steps:
      - uses: actions/checkout@v1
      - name: Register Docker QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build bitcoind
        run: docker build --build-arg ARCH=${{ matrix.arch }} --build-arg VERSION=${{ matrix.version }} -t bitcoind:v${{ matrix.version }}-${{ matrix.arch }} .
      - name: Log image data
        run: docker images bitcoind
      - name: Log OS details
        run: docker run --entrypoint sh bitcoind:v${{ matrix.version }}-${{ matrix.arch }} '-c' 'uname -a && . /etc/os-release && echo $PRETTY_NAME'
      - name: Check bitcoind -version
        run: (docker run bitcoind:v${{ matrix.version }}-${{ matrix.arch }} -version | tee /dev/stderr | grep -q ${{ matrix.version }}) 2>&1
      - name: Save image tarballs
        run: mkdir -p images && docker save bitcoind:v${{ matrix.version }}-${{ matrix.arch }} | gzip > "images/bitcoind-v${{ matrix.version }}-${{ matrix.arch }}.tgz"
      - name: Print sha256sum of built image
        run: sha256sum images/*
      - name: Upload image tarballs
        uses: actions/upload-artifact@v1.0.0
        with:
          name: images
          path: images/
  push:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - name: Download image tarballs
        uses: actions/download-artifact@v1.0.0
        with:
          name: images
      - name: Print sha256sum of all images
        run: sha256sum images/*
      - name: Load image tarballs
        run: for image in images/*; do docker load -i $image; done
      - name: Set image namespace
        run: docker images bitcoind --format "{{.Tag}}" | while read -r tag; do docker tag  "bitcoind:${tag}"  "lukechilds/bitcoind:${tag}"; done
      - name: Log image data
        run: docker images lukechilds/bitcoind
      - name: Login to Docker Hub
        run: echo "${{secrets.DOCKER_TOKEN}}" | docker login -u=lukechilds --password-stdin
      - name: Push to Docker Hub
        run: docker push lukechilds/bitcoind
      - name: Create multi-arch manifest
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled # To enable manifests
        run: |
          versions=$(docker images lukechilds/bitcoind --format "{{.Tag}}" | grep amd64 | cut -d- -f1)
          for version in $versions; do
            tags=$(docker images lukechilds/bitcoind --format "{{.Tag}}" | grep $version- | sed 's/^/lukechilds\/bitcoind\:&/')
            docker manifest create "lukechilds/bitcoind:${version}" $tags
            docker manifest push "lukechilds/bitcoind:${version}"
            docker manifest inspect "lukechilds/bitcoind:${version}"
            echo
          done
